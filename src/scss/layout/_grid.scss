.row {
	max-width: $grid-width;
	min-height: 100%;
	margin: 0 auto;
	
	&:not(:last-child) { /* The not pseudo-class will select everything except for what we specify. In this case, every child but the last child of row. */
		margin-bottom: $gutter-vertical;
	}

	@include clearfix;

	[class^="col-"] { /*added caret is what specifies the behavior of selecting all classes beginning with the given phrase. If it were simply just class = "col-", it would take that literally and nothing would be selected. */
		float: left;
		overflow: hidden;

		&:not(:last-child){
			margin-right: $gutter-horizontal;
		}
	}

	// ------------------------------------------------------------------------------------------
	.col-eighth {
		width: calc((100% - 7 * #{$gutter-horizontal}) / 8);
	}

	.col-threeEighths {
		width: calc(((100% - 7 * #{$gutter-horizontal}) / 8) * 3 + 2 * #{$gutter-horizontal});
	}

	.col-fiveEighths {
		width: calc(((100% - 7 * #{$gutter-horizontal}) / 8) * 5 + 4 * #{$gutter-horizontal});
	}

	.col-sevenEighths {
		width: calc(((100% - 7 * #{$gutter-horizontal}) / 8) * 7 + 6 * #{$gutter-horizontal});
	}
	// -------------------------------------------------------------------------------------------
	
	.col-seventh {
		width: calc((100% - 6 * #{$gutter-horizontal}) / 7);
	}

	.col-twoSevenths {
		width: calc(((100% - 6 * #{$gutter-horizontal}) / 7) * 2 + #{$gutter-horizontal});
	}
	.col-threeSevenths {
		width: calc(((100% - 6 * #{$gutter-horizontal}) / 7) * 3 + 2 * #{$gutter-horizontal});
	}
	.col-fourSevenths {
		width: calc(((100% - 6 * #{$gutter-horizontal}) / 7) * 4 + 3 * #{$gutter-horizontal});
	}
	.col-fiveSevenths {
		width: calc(((100% - 6 * #{$gutter-horizontal}) / 7) * 5 + 4 * #{$gutter-horizontal});
	}
	.col-sixSevenths {
		width: calc(((100% - 6 * #{$gutter-horizontal}) / 7) * 6 + 5 * #{$gutter-horizontal});
	}
	// -------------------------------------------------------------------------------------------

	.col-sixth {
		width: calc((100% - 5 * #{$gutter-horizontal}) / 6);
	}

	.col-fiveSixths {
		width: calc(((100% - 5 * #{$gutter-horizontal}) / 6) * 5 + 4 * #{$gutter-horizontal});
	}
	// -------------------------------------------------------------------------------------------
	.col-fifth {
	    width: calc((100% - 4 * #{$gutter-horizontal}) / 5);
	}

	.col-twoFifths {
	    width: calc(((100% - 4 * #{$gutter-horizontal}) / 5) * 2 + #{$gutter-horizontal});
	}

	.col-threeFifths {
	    width: calc(((100% - 4 * #{$gutter-horizontal}) / 5) * 3 + 2 * #{$gutter-horizontal});
	}

	.col-fourFifths {
	    width: calc(((100% - 4 * #{$gutter-horizontal}) / 5) * 4 + 3 * #{$gutter-horizontal});
	}
	// -------------------------------------------------------------------------------------------
	
	.col-fourth {
		width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
	}
	.col-threeFourths {
		width: calc(((100% - 3 * #{$gutter-horizontal}) / 4) * 3 + 2 * #{$gutter-horizontal});
	}
	
	// -------------------------------------------------------------------------------------------
	.col-third {
		width: calc((100% - 2 * #{$gutter-horizontal}) / 3);;
	}
	.col-twoThirds {
		width: calc(((100% - 2 * #{$gutter-horizontal}) / 3) * 2 + #{$gutter-horizontal});
	}

	// -------------------------------------------------------------------------------------------
	.col-half {
		width: calc((100% - #{$gutter-horizontal}) / 2); /* in order t0 use a SASS variable in calc we need to wrap our usual variable in curly brackets and precede those set of braackets with a # */
	}



	

	


}